version: '3'
services:

  front-end:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    environment:
      PORT: "80"
      PYROSCOPE_SERVER_ADDRESS: http://pyroscope:4040
    ports:
      - 80:80
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    build:
      context: ./broker-service
      dockerfile: Dockerfile
    container_name: broker
    restart: always
    depends_on:
      - loki
      - otel-collector
    environment:
      LOKI_WEBHOOK_URL: "http://loki:3300"
      PORT: "80"
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_EXPORTER_OTLP_ENDPOINT: otel-collector:4317
      OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: http/protobuf
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: http://otel-collector:4318/v1/metrics
      OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: http/protobuf
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otel-collector:4318/v1/traces
      PYROSCOPE_SERVER_ADDRESS: http://pyroscope:4040
    ports:
      - 8080:80
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth
    restart: always
    depends_on:
      - postgres
      - loki
      - otel-collector
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
      LOKI_WEBHOOK_URL: "http://loki:3300"
      PORT: "80"
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_EXPORTER_OTLP_ENDPOINT: otel-collector:4317
      OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: http/protobuf
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: http://otel-collector:4318/v1/metrics
      OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: http/protobuf
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otel-collector:4318/v1/traces
      PYROSCOPE_SERVER_ADDRESS: http://pyroscope:4040
    ports:
      - 6080:80
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    container_name: "postgres"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./data/db-data/postgres/:/var/lib/postgresql/data/

  # Observability tools

  prometheus:
    image: prom/prometheus:latest
    container_name: "prometheus"
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./config/prometheus/config.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: "grafana"
    ports:
      - 3000:3000
    environment:
      - GF_INSTALL_PLUGINS=grafana-pyroscope-app
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./config/grafana:/etc/grafana/provisioning
    depends_on:
      - tempo
      - loki

  tempo:
    image: grafana/tempo:latest
    container_name: "tempo"
    volumes:
      - ./config/tempo/config.yaml:/etc/config.yaml
    command: "-config.file=/etc/config.yaml"
    ports:
      - "3100:3100"
      - "3200:3200"

  loki:
    depends_on:
      - minio
    image: grafana/loki:latest
    container_name: "loki"
    ports:
      - "3300:3300"
    volumes:
      - ./config/loki/config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  minio:
    image: minio/minio:latest
    container_name: "minio"
    environment:
      MINIO_ROOT_USER: loki
      MINIO_ROOT_PASSWORD: supersecret
    volumes:
      - ./data/minio:/data
    ports:
      - "9000:9000"
    command: server /data

  otel-collector:
    # otel-collector to collect all our monitoring data
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    container_name: "otel-collector"
    volumes:
      - ./config/otel/config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "8888:8888"   # metrics endpoint
      - "8889:8889"   # Prometheus exporter
  
  pyroscope:
    image: grafana/pyroscope:latest
    ports:
    - 4040:4040